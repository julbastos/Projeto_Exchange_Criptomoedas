#include <stdio.h>
#include <stdlib.h>
#include <string.h>

char cpfs[4][12] = {
    "12345678910",
    "11111111111",
    "22222222222",
    "33333333333"
};

char senhas[4][7] = {
    "123456",
    "234567",
    "345678",
    "456789"
};

char nomes[4][20] = {
    "Analiza Julia",
    "Ana",
    "Liza",
    "Julia"
};

float reais[4] = {0.00, 0.00, 0.00, 0.00};
float bitcoin[4] = {0.00, 0.00, 0.00, 0.00};
float ethereum[4] = {0.00, 0.00, 0.00, 0.00};
float ripple[4] = {0.00, 0.00, 0.00, 0.00};

void consultar_saldo(int cliente) {
    char senha_acesso_saldo[7]; // 6 dígitos + 1 para o caractere nulo

    while (1) {
        printf("==----------------------------==\n");
        printf("Digite sua senha: ");
        scanf("%s", senha_acesso_saldo);
        if (strcmp(senhas[cliente], senha_acesso_saldo) == 0) {
            printf("==----------------------------==\n");
            printf("Nome: %s\n", nomes[cliente]);
            printf("CPF: %c%c%c.%c%c%c.%c%c%c-%c%c\n", // Formatação do CPF
                cpfs[cliente][0], cpfs[cliente][1], cpfs[cliente][2],
                cpfs[cliente][3], cpfs[cliente][4], cpfs[cliente][5],
                cpfs[cliente][6], cpfs[cliente][7], cpfs[cliente][8],
                cpfs[cliente][9], cpfs[cliente][10]);
            printf("\nReais (R$): %.2f\n", reais[cliente]);
            printf("Bitcoin (BTC): %.6f\n", bitcoin[cliente]);
            printf("Ethereum (ETH): %.6f\n", ethereum[cliente]);
            printf("Ripple (XRP): %.6f\n", ripple[cliente]);
            return;
        } else {
            printf("Senha incorreta. Digite novamente.\n");
        }
    }
}

void menu_completo(int cliente) {
    int opcao_menu;

    while (1) {
        printf("==----------------------------==\n");
        printf("Menu: \n");
        printf("1. Consultar saldo\n");
        printf("2. Consultar extrato\n");
        printf("3. Depositar\n");
        printf("4. Sacar\n");
        printf("5. Comprar criptomoedas\n");
        printf("6. Vender criptomoedas\n");
        printf("7. Atualizar cotação\n");
        printf("8. Sair\n");
        printf("==----------------------------==\n");
        printf("Escolha sua opção: ");
        scanf("%d", &opcao_menu);

        switch (opcao_menu) {
            case 1:
                consultar_saldo(cliente);
                break;
            case 2:
                // A ser implementada
                break;
            case 3:
        // A ser implementada                
        break;
            case 4:
                // A ser implementada
                break;
            case 5:
                // A ser implementada
                break;
            case 6:
                // A ser implementada
                break;
            case 7:
                // A ser implementada
                break;
            case 8:
                return;
            default:
                printf("Opção inválida. Tente novamente.\n");
                break;
        }
    }
}

void encerrar_programa() { 
    printf("==--------------------------------------------------==\n");
    printf("Encerrando o Programa. Obrigado por trabalhar conosco!\n");
    printf("==--------------------------------------------------==\n");
    exit(0); 
}

void efetuar_login() {
    char cpf_login[12];  // 11 dígitos + 1 para o caractere nulo
    char senha_login[7]; // 6 dígitos + 1 para o caractere nulo
    int opcao_login;

    while (1) {
        printf("==--------------------------------------==\n");
        printf("Seja bem-vindo à Exchange de Criptomoedas!\n");
        printf("1 - Efetuar Login\n");
        printf("2 - Sair\n");
        printf("==--------------------------------------==\n");
        printf("Por favor, selecione a opção desejada: ");
        scanf("%d", &opcao_login);

        if (opcao_login == 2){
            encerrar_programa(); // Saída
        } else if (opcao_login != 1){
            printf("Opção irreconhecível. Tente novamente.\n");
        } else {
            printf("Digite seu CPF (Somente números): ");
            scanf("%s", cpf_login);

            printf("Digite sua senha (Somente números): ");
            scanf("%s", senha_login);

            for (int i = 0; i < 4; i++) {
                if (strcmp(cpfs[i], cpf_login) == 0 && strcmp(senhas[i], senha_login) == 0) {
                    printf("==--------------------------------------==\n");
                    printf("É bom te ter de volta, %s :)\n", nomes[i]);
                    menu_completo(i);
                    return; 
                }
            } 
            printf("CPF ou senha inválidos. Tente novamente.\n");
        }
    }
}

int main() {

    while (1) {
        efetuar_login();
    }

    return 0;
}p
